[meta title:"Physics_Fundamentals" description:"Short description of your project" /]

[Header
  fullWidth:true
  title:"Physics Fundamentals"
  subtitle:"Physics II Fundamentals with Python"
  date:`(new Date()).toDateString()`
  background:"#009999"
  color:"#ffffff"
   /]

[var name:"currentValue" value:"" /]

[div class:"tabLook" fullWidth:true]
  [button onClick:`currentValue = ""`]Overview[/Button]
  [button onClick:`currentValue = "Vectors"`]Vectors ([Equation]+, -, \bullet, \times [/Equation])[/Button]
  [button onClick:`currentValue = "Magnitude"`]Magnitude[/Button]
[/div]

[br /]
[br /]
[hr fullWidth:true /]

[div class:"problemBody" fullWidth:true padding-left:`100%`]
  [Switch value:currentValue]
    [Default]
      [div class:"centerHead iframe"]

        ### Overview

        [br /]

        Computation and physics requires two levels of understanding: knowing how
        to tell the application what to do and knowing *how to do* the physics.
        Physics Fundamentals with computation introduces elementary concepts
        with python. These concepts are *very* important and used throughout the
        course.

        Click the tabs to learn more about these fundamental concepts, how to
        calculate them, and how to tell the application (Trinket) to calculate it
        for you.

        Note that Trinket supports two versions of Python, which can be specified
        at the top of the script. For python 2, add `#!/bin/python2` and for python 3,
        add `#!/bin/python3`. Also note that Trinket does not support all python
        modules. For a list of the currently available modules, click [HERE](https://trinket.io/docs/python).

        Want to learn more about programming in python? Visit these resources:

        [ul]
          [li] [The Python Tutorial](https://docs.python.org/2/tutorial)[/li]
          [li] [Code Academy](https://codeacademy.com/learn/learn-python)[/li]
          [li] [Turtle Programming](https://hourofpython.trinket.io/a-visual-introduction-to-python#/welcome/an-hour-of-code)[/li]
        [/ul]

        ### Trinket

        [br /]

        Below is an example of Tina the turtle traveling to some specific points.
        What physics concept can this be related to? Play with the code and see
        what you can make Tina do. Want to learn more? Visit one of the links above.

        [iframe src:"https://trinket.io/embed/python/e313939670?start=result" width:"100%" height:"356" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

        [br /]

        Each of the tabs feature a Trinket like the one above (minus Tina) to
        execute the code. To save specific Trinkets for your own reference,
        complete the following steps:

        [ul]
          [li] Go to the Trinket [sign-up](https://trinket.io/signup) page.[/li]
          [li] Create an account. [/li]
          [li] On the embedded Trinket, click [Inline][img src:"./static/images/trinket_login.png" title:"Log into Trinket" /][/Inline] on the top right to log in using your account email and password.[/li]
          [li] Click [Inline][img src:"./static/images/trinket_remix.png" title:"Remix the Trinket" /][/Inline] to save a copy of the code to your Trinket account. [/li]
          [li] Save the Trinket with a unique name for future reference. [/li]
        [/ul]

        ### Module Content

        #### Vectors!

        View the following video for a quick summary of vectors and why they are useful
        in various fields. Need an extra refresher? Visit the [Vectors Guide](./Vectors_Guide)! *Fix Link*

        [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/ml4NSzCQobk" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]

        [br /]

        Click the Vectors tab to explore how to compute the following vector operations
        in Python.

        [ul]
          [li]Addition[/li]
          [li]Subtraction[/li]
          [li]Multiplying a vector by a scalar[/li]
          [li]Dot product[/li]
          [li]Cross product[/li]
        [/ul]
      [/div]

      #### Magnitude!

      Finding the magnitude is *essential* in Physics II. In fact, it's a skill
      tested in the very first question of the Wiley Plus homework. Click the
      Magnitude tab to figure out how to calculate magnitude in Python.

      [br /]

      [div class:"centerPara"]
        **Ready for more?** Visit the [Electric Fields & Python](../../electric-fields/) page!
      [/div]

      [br /]
      [hr /]

      [div class:"centerPara"]
        [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
        [Physics Department](https://clas.ucdenver.edu/physics/)
        [br /]
        Feedback Form *Insert Link*
      [/div]

    [/Default]
    [Case test:"Vectors"]
      [div class:"subCenterHead iframe"]

        ## Vectors

        [br /]

        [var name:"vecTabValue" value:"" /]

        [div class:"subtabLook" fullWidth:true]
          [button onClick:`vecTabValue = ""`]Adding[/Button]
          [button onClick:`vecTabValue = "Subtracting"`]Subtracting[/Button]
          [button onClick:`vecTabValue = "Scale"`]*Scaling* with Scalars[/Button]
          [button onClick:`vecTabValue = "Dot"`]Dot Product[/Button]
          [button onClick:`vecTabValue = "Cross"`]Cross Product[/Button]
        [/div]

        [br /]
        [br /]
        [br /]
        [hr /]
        [br /]

        [Switch value:vecTabValue]
          [Default]
            [div class:"subProblemBody"]

              ### Vector Addition

              [br /]

              [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/ci29I7a0HI8" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]

              [br /]

              #### Question

              [br /]

              [div class:"questions"]

                What is [Equation]\vec{a} + \vec{b}[/Equation]?

                [br /]

                    [Equation]\vec{a} = \lt 0, 5, 0 \gt [/Equation]
                    [br /]
                    [Equation]\vec{b} = \lt 5, 5, 0 \gt [/Equation]
                    [br /]

              [/div]

              [br /]

              #### Solve

              [br /]

              Using the Trinket below, set up the problem.

              [ul]
                [li] Import NumPy by adding an import line: `import numpy as np`.
                This will allow you to use np.array to represent the vectors in the code.[/li]
                [li] Assign the np.arrays to the a and b variables. Example: `a = np.array([x,y,z])`.[/li]
                [li] Create another variable that equals a + b. Example: `ans = a + b`[/li]
                [li] Print the answer! Add `print(ans)`. Note that the print command is slightly different
                in python 2.[/li]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer!
                *Note*: it will output `array([x, y, z], '<class 'int'>')` where
                the three components of the array are equal to the answer. [/li]
              [/ul]

              [iframe src:"https://trinket.io/embed/python/8917f592ec?runOption=console" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]
              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] \lt 5, 10, 0 \gt [/Equation]
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  To add vectors together, add each component of each vector (x + x, y + y, z + z):

                  [div class:"equations"]
                    [Equation]\vec{A} + \vec{B} = \lt (A_{x} + B_{x}), (A_{y} + B_{y}), (A_{z} + B_{z}) \gt[/Equation]
                  [/div]

                  [br /]
                  [br /]

                  Graphically, vectors can be added with the tip-to-tail method and by plotting the vectors on a graph.
                  [br /]
                  [br /]
                  [iframe src:"https://giphy.com/embed/XfOPWFNbnoFC5Io03n" width:"480" height:"376" frameBorder:"0" class:"giphy-embed"][/iframe]

                [/Conditional]
              [/div]

              Use the PhET simulation below to recreate the answer. Can you make it match?
              Try new numbers and update the Trinket so the computation matches the simulation.
              Save your Trinket to an account, or email it to yourself to use on future vector
              addition problems.

              [iframe src:"https://phet.colorado.edu/sims/html/vector-addition/latest/vector-addition_en.html" width:"800" height:"600" scrolling:"no"][/iframe]

              [hr /]

              #### Activity

              [br /]

              Using the same vectors listed above, let's use python to plot them and test our
              answers.

              [div class:"questions"]

                Graph [Equation]\vec{a} + \vec{b}[/Equation].

                [br /]

                    [Equation]\vec{a} = \lt 0, 5, 0 \gt [/Equation]
                    [br /]
                    [Equation]\vec{b} = \lt 5, 5, 0 \gt [/Equation]
                    [br /]

              [/div]

              [br /]

              #### Solve

              [br /]

              Using the Trinket below, set up the problem.

              [div class:"trinketInst"]
                Import Statements
              [/div]

              [br /]

              [ul]
                [li] `import numpy as np` [/li]
                [ul]
                  [li] This imports NumPy for use in:[/li]
                  [ul]
                    [li] [np.array](https://numpy.org/doc/stable/reference/generated/numpy.array.html)
                    for vectors [/li]
                    [li] [np.arange](https://numpy.org/doc/stable/reference/generated/numpy.arange.html)
                    for specifying the plot tick intervals *Note*: there is 1 r (aRange, not arrange)[/li]
                  [/ul]
                [/ul]
                [li] `import matplotlib.pyplot as plt` [/li]
                [ul]
                  [li] This imports matplotlib to format and plot the vectors.[/li]
                [/ul]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Set up the vectors
              [/div]

              [br /]

              [ul]
                [li] Assign np.arrays to variables. [/li]
                [ul]
                  [li] `vec_a = np.array([x,y])`[/li]
                  [li] `vec_b = np.array([x,y])`[/li]
                [/ul]
                [li] Note that this is a 2D plot. The third component can be
                added, but this plot type will ignore it. [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Set up the graph
              [/div]

              [br /]

              [ul]
                [li] `plt.axis([-1,15,-1,15])` [/li]
                [li] `plt.xticks(np.arange(0,16,1))` [/li]
                [li] `plt.yticks(np.arange(0,16,1))` [/li]
                [li] `origin = [0],[0]` [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Add the third vector
              [/div]

              [br /]

              [ul]
                [li] `vec_c = vec_a + vec_b` [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Print the graph
              [/div]

              [br /]

              [ul]
                [li] `print(vec_a, "+", vec_b, "=", vec_c)` [/li]
                [li] `plt.quiver(*origin, vec_a[0], vec_a[1], color='purple', scale_units='xy', angles='xy', scale = 1, label = vec_a)` [/li]
                [li] `plt.quiver(*origin, vec_b[0], vec_b[1], color = 'blue', scale_units='xy', angles='xy', scale=1, label = vec_b)` [/li]
                [li] `plt.quiver(*origin, vec_c[0], vec_c[1], scale_units='xy', angles='xy', scale = 1, label = vec_c)` [/li]
                [li] `plt.legend()` [/li]
                [li] `plt.show()` [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Run the code!
              [/div]

              [br /]

              [ul]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer!
                *Note*: it will output `array([x, y, z], '<class 'int'>')` where
                the three components of the array are equal to the answer. [/li]
              [/ul]

              [br /]

              [iframe src:"https://trinket.io/embed/python3/4bb3797027" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] [0 \; 5] + [5 \; 5] = [5 \; 10] [/Equation]
                  [/div]

                  [br /]

                  [img src:"./static/images/addition_graph_ans.png" title:"Addition Plot" /]

                  [br /]
                  [br /]

                  *Does the output match the answers from the questions above?*

                  [br /]
                  [br /]

                [/Conditional]
              [/div]

              [br /]
              [br /]

              [hr /]

              [div class:"centerPara"]
                [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
                [Physics Department](https://clas.ucdenver.edu/physics/)
                [br /]
                Feedback Form *Insert Link*
              [/div]

            [/div]
          [/Default]
          [Case test:"Subtracting"]
            [div class:"subProblemBody iframe"]

              ### Vector Subtraction

              [br /]

              View the video on the Vector Addition page.

              #### Question

              [br /]

              [div class:"questions"]

                What is [Equation]\vec{a} - \vec{b}[/Equation]?

                [br /]

                  //[div class: "questionsMore"]
                    [Equation]\vec{a} = \lt 3, 9, 0 \gt [/Equation]
                    [br /]
                    [Equation]\vec{b} = \lt 4, 3, 0 \gt [/Equation]
                    [br /]
                  //[/div]

              [/div]

              #### Solve

              Using the Trinket below, set up the problem.

              [ul]
                [li] Import NumPy by adding an import line: `import numpy as np`.
                This will allow you to use np.array to represent the vectors in the code.[/li]
                [li] Assign the np.arrays to the a and b variables. Example: `a = np.array([x,y,z])`.[/li]
                [li] Create another variable that will equal a + b. Example: `ans = a - b`[/li]
                [li] Print the answer! Add `print(ans)`. Note that the print command is slightly different
                in python 2.[/li]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer!
                *Note*: it will output `array([x, y, z], '<class 'int'>')` where
                the three components of the array are equal to the answer.[/li]
              [/ul]


              [iframe src:"https://trinket.io/embed/python/8917f592ec?runOption=console" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]
              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] \lt -1, 6, 0 \gt [/Equation]
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  To subtract a vector from another vector, subtract each component of each vector (x - x, y - y, z - z):

                  [div class:"equations"]
                    [Equation]\vec{A} - \vec{B} = \lt (A_{x} - B_{x}), (A_{y} - B_{y}), (A_{z} - B_{z}) \gt[/Equation]
                  [/div]

                  [br /]
                  [br /]

                  Graphically, vectors can be subtracted in a few different ways.
                  [br /]
                  [br /]
                  Insert gifs of subtracting vectors.

                  [hr /]

                [/Conditional]

              [/div]

              *Insert questions that predict different vector results.*

              [br /]

              #### Activity

              [br /]

              Using the same vectors listed above, let's use python to plot them and test our
              answers.

              [div class:"questions"]

                Graph [Equation]\vec{a} - \vec{b}[/Equation].

                [br /]

                    [Equation]\vec{a} = \lt 3, 9, 0 \gt [/Equation]
                    [br /]
                    [Equation]\vec{b} = \lt 4, 3, 0 \gt [/Equation]
                    [br /]

              [/div]

              [br /]

              #### Solve

              [br /]

              Using the Trinket below, set up the problem.

              [div class:"trinketInst"]
                Import Statements
              [/div]

              [br /]

              [ul]
                [li] `import numpy as np` [/li]
                [ul]
                  [li] This imports NumPy for use in:[/li]
                  [ul]
                    [li] [np.array](https://numpy.org/doc/stable/reference/generated/numpy.array.html)
                    for vectors [/li]
                    [li] [np.arange](https://numpy.org/doc/stable/reference/generated/numpy.arange.html)
                    for specifying the plot tick intervals *Note*: there is 1 r (aRange, not arrange)[/li]
                  [/ul]
                [/ul]
                [li] `import matplotlib.pyplot as plt` [/li]
                [ul]
                  [li] This imports matplotlib to format and plot the vectors.[/li]
                [/ul]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Set up the vectors
              [/div]

              [br /]

              [ul]
                [li] Assign np.arrays to variables. [/li]
                [ul]
                  [li] `vec_a = np.array([x,y])`[/li]
                  [li] `vec_b = np.array([x,y])`[/li]
                  [li] `vec_c = vec_a - vec_b`[/li]
                [/ul]
                [li] Note that this is a 2D plot. The third component can be
                added, but this plot type will ignore it. [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Set up the graph
              [/div]

              [br /]

              [ul]
                [li] `plt.axis([-1,10,-1,10])` [/li]
                [li] `plt.xticks(np.arange(-5,11,1))` [/li]
                [li] `plt.yticks(np.arange(-5,11,1))` [/li]
                [li] `origin = [0],[0]` [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Print the graph
              [/div]

              [br /]

              [ul]
                [li] `print(vec_a, "-", vec_b, "=", vec_c)` [/li]
                [li] `plt.quiver(*origin, vec_a[0], vec_a[1], color='orange', scale_units='xy', angles='xy', scale = 1, label = vec_a)` [/li]
                [li] `plt.quiver(*origin, vec_b[0], vec_b[1], color = 'blue', scale_units='xy', angles='xy', scale=1, label = vec_b)` [/li]
                [li] `plt.quiver(*origin, vec_c[0], vec_c[1], scale_units='xy', angles='xy', scale = 1, label = vec_c)` [/li]
                [li] `plt.legend()` [/li]
                [li] `plt.show()` [/li]
              [/ul]

              [br /]

              [div class:"trinketInst"]
                Run the code!
              [/div]

              [br /]

              [ul]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer![/li]
              [/ul]

              [br /]

              [iframe src:"https://trinket.io/embed/python3/bdcd51bd8d" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] [3 \;\; 9] - [4 \;\; 3] = [-1 \;\; 6] [/Equation]
                  [/div]

                  [br /]

                  [img src:"./static/images/subtract_graph_ans.png" title:"Subtraction Plot" /]

                  [br /]
                  [br /]

                  *Does the output match the answers from the questions above?*

                  [br /]
                  [hr /]
                  [br /]

                [/Conditional]
              [/div]

              Now let's think about three dimensions. Using the same x and y components,
              add a z to each of the vectors.

              #### Activity

              [br /]

              [div class: "questions"]

                Graph and Solve [Equation]\vec{a} - \vec{b}[/Equation]

                [br /]

                [Equation]\vec{a} = \lt 3, 9, 5 \gt [/Equation]
                [br /]
                [Equation]\vec{b} = \lt 4, 3, 6 \gt [/Equation]
                [br /]
              [/div]

            [br /]

            [br /]

            #### Solve

            [br /]

            Using the Trinket below, set up the problem.

            [div class:"trinketInst"]
              Import Statements
            [/div]

            [br /]

            [ul]
              [li] `import numpy as np` [/li]
              [ul]
                [li] This imports NumPy for use in:[/li]
                [ul]
                  [li] [np.array](https://numpy.org/doc/stable/reference/generated/numpy.array.html)
                  for vectors [/li]
                [/ul]
              [/ul]
              [li] `import matplotlib.pyplot as plt` [/li]
              [ul]
                [li] This imports matplotlib to format and plot the vectors.[/li]
              [/ul]
              [li] `from mpl_toolkits import mplot3d`[/li]
              [ul]
                [li] This imports mplot3d to create the 3d components of the graph.[/li]
              [/ul]
            [/ul]

            [br /]

            [div class:"trinketInst"]
              Set up the vectors
            [/div]

            [br /]

            [ul]
              [li] Assign np.arrays to variables. [/li]
              [ul]
                [li] `vec_a = np.array([x,y,z])`[/li]
                [li] `vec_b = np.array([x,y,z])`[/li]
              [/ul]
              [li] `vec_c = vec_a - vec_b`[/li]
            [/ul]

            [br /]

            [div class:"trinketInst"]
              Set up the graph
            [/div]

            [br /]

            [ul]
              [li] `fig = plt.figure()` [/li]
              [li] `ax = fig.gca(projection='3d')` [/li]
              [li] `ax.set_xlim([-5, 10])` [/li]
              [li] `ax.set_ylim([-5, 10])` [/li]
              [li] `ax.set_zlim([-5, 10])`[/li]
              [li] `ax.set_xlabel('X', color = 'green')`[/li]
              [li] `ax.set_ylabel('Y', color = 'green')`[/li]
              [li] `ax.set_zlabel('Z', color = 'green')`[/li]
            [/ul]

            [br /]

            [div class:"trinketInst"]
              Print the graph
            [/div]

            [br /]

            [ul]
              [li] `print(vec_a, "-", vec_b, "=", vec_c)` [/li]
              [li] `ax.quiver(0, 0, 0, vec_a[0], vec_a[1], vec_a[2], color='orange', label = vec_a, arrow_length_ratio = 0.15)` [/li]
              [li] `ax.quiver(0, 0, 0,  vec_b[0], vec_b[1], vec_b[2], color = 'blue', label = vec_b, arrow_length_ratio = 0.15)` [/li]
              [li] `ax.quiver(0, 0, 0, vec_c[0], vec_c[1], vec_b[2], color = 'black', label = vec_c, arrow_length_ratio = 0.15)` [/li]
              [li] `plt.legend(loc = 2)` [/li]
              [li] `plt.show()` [/li]
            [/ul]

            [br /]

            [div class:"trinketInst"]
              Run the code!
            [/div]

            [br /]

            [ul]
              [li] Click `>_Console` to run the code.[/li]
              [li] Click the **Reveal Answer** button below the Trinket to check your answer![/li]
            [/ul]

            [br /]

            [iframe src:"https://trinket.io/embed/python3/ff399f1416" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

            [br /]

              [div class:"revealButtons"]
                [var name:"clickReveal2" value:false /]

                [button onClick:`clickReveal2 = !clickReveal2`]
                  [Display value:`clickReveal2 ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal2`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] [3 \;\; 9 \;\; 5] - [4 \;\; 3 \;\; 6] = [-1 \;\; 6 \;\; -1] [/Equation]
                  [/div]

                  [br /]

                  [img src:"./static/images/3d_subtraction_ans.png" title:"Subtraction Plot" /]

                  [br /]
                  [br /]

                  *How does this differ from the graph above?*

                  [br /]
                  [hr /]
                  [br /]

                [/Conditional]
              [/div]

              [hr /]

              [div class:"centerPara"]
                [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
                [Physics Department](https://clas.ucdenver.edu/physics/)
                [br /]
                Feedback Form *Insert Link*
              [/div]

            [/div]
          [/Case]
          [Case test:"Scale"]
            [div class:"iframe"]

              ### Multiplying a Vector by a Scalar

              [br /]

              [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/MpN8BIci-Ys" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]

              #### Question

              [br /]

              [div class:"questions"]

                What is [Equation]16 \times \vec{c}[/Equation]?

                [br /]

                [Equation]\vec{c} = \lt 4, 10, 7 \gt [/Equation]

              [/div]

              [br /]

              #### Solve

              Using the Trinket below, set up the problem.

              [ul]
                [li] Import NumPy by adding an import line: `import numpy as np`.
                This will allow you to use np.array to represent the vector in the code.[/li]
                [li] Assign the np.array to the c variable. Example: `c = np.array([x,y,z])`.[/li]
                [li] Assign a variable that equals the scalar.[/li]
                [li] Create another variable that equals the scalar and the vector. Example: `ans = c * s`.[/li]
                [li] Print the answer! Add `print(ans)`. Note that the print command is slightly different
                in python 2, but both `print(ans)` and `print ans` should output without errors.[/li]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer!
                *Note*: it will output `array([x, y, z], '<class 'int'>')` where
                the three components of the array are equal to the answer.[/li]
              [/ul]

              [iframe src:"https://trinket.io/embed/python/8434fe5a43" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    [Equation] \lt 64, 160, 112 \gt [/Equation]
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  To multiply a vector by a scalar, multiply each component of the vector by the scalar (s):

                  [div class:"equations"]
                    [Equation]\vec{c} \times s = \lt (x_{c} \times s), (y_{c} \times s), (z_{c} \times s) \gt[/Equation]
                  [/div]

                  [br /]
                  [br /]

                  Insert a visual thingy.

                  [br /]
                  [br /]

                  [hr /]

                [/Conditional]

              [/div]

              What happens when the scalar is negative? Think about addition and
              subtraction vector equations when a negative is added. What happens
              to that component?

              [br /]

               #### Activity

               [br /]

               Understand the scaling of vectors.

               [div class:"questions"]

                 Graph [Equation]\vec{a} \times scalar[/Equation].

                 [Equation]\vec{a} = \lt 2, 2, 4.5 \gt [/Equation]
                 [br /]
                 Scalars: s = 2, m = 4, h = 6
                 [br /]

               [/div]

               [br /]

               #### Solve

               [br /]

               Using the Trinket below, set up the problem.

               [div class:"trinketInst"]
                 Import Statements
               [/div]

               [br /]

               [ul]
                 [li] `import numpy as np` [/li]
                 [ul]
                   [li] This imports NumPy for use in:[/li]
                   [ul]
                     [li] [np.array](https://numpy.org/doc/stable/reference/generated/numpy.array.html)
                     for vectors [/li]
                   [/ul]
                 [/ul]
                 [li] `import matplotlib.pyplot as plt` [/li]
                 [ul]
                   [li] This imports matplotlib to format and plot the vectors.[/li]
                 [/ul]
                 [li] `from mpl_toolkits import mplot3d`[/li]
               [/ul]

               [br /]

               [div class:"trinketInst"]
                 Set up the vectors
               [/div]

               [br /]

               [ul]
                 [li] Assign np.arrays to variables. [/li]
                 [ul]
                   [li] `vec_a = np.array([x,y,z])`[/li]
                 [/ul]
                 [li] Add the scalars. [/li]
                 [ul]
                   [li] `s = #`[/li]
                   [li] `m = #`[/li]
                   [li] `h = #`[/li]
                 [/ul]
                 [li] Add vectors that will equal the different scalars times `vec_a`[/li]
                 [ul]
                   [li] `vec_b = s * vec_a`[/li]
                   [li] `vec_c = m * vec_a`[/li]
                   [li] `vec_d = -s * vec_a`[/li]
                   [li] `vec_e = -h * vec_a`[/li]
                 [/ul]
               [/ul]

               [br /]

               [div class:"trinketInst"]
                 Set up the graph
               [/div]

               [br /]

               [ul]
                 [li] `fig = plt.figure()` [/li]
                 [li] `ax = fig.gca(projection='3d')` [/li]
                 [li] `ax.set_xlim([-30, 30])` [/li]
                 [li] `ax.set_ylim([-30, 30])` [/li]
                 [li] `ax.set_zlim([-30, 30])` [/li]
                 [li] `ax.set_xlabel('X', color = 'green')` [/li]
                 [li] `ax.set_ylabel('Y', color = 'green')` [/li]
                 [li] `ax.set_zlabel('Z', color = 'green')` [/li]
               [/ul]

               [br /]

               [div class:"trinketInst"]
                 Print the graph
               [/div]

               [br /]

               [ul]
                 [li] `print(vec_a, "x", 2, "=", vec_b)` [/li]
                 [li] `print(vec_a, "x", 4, "=", vec_c)` [/li]
                 [li] `print(vec_a, "x", -2, "=", vec_d)` [/li]
                 [li] `print(vec_a, "x", -6, "=", vec_e)` [/li]
                 [li] `ax.quiver(0, 0, 0, vec_a[0], vec_a[1], vec_a[2], color='red', label = vec_a, arrow_length_ratio = .5)` [/li]
                 [li] `plt.legend(loc = 2)` [/li]
                 [li] `plt.show()` [/li]
               [/ul]

               [br /]

               [div class:"trinketInst"]
                 Run the code!
               [/div]

               [br /]

               [ul]
                 [li] Click `>_Console` to run the code.[/li]
                 [li] Click the **Reveal Answer** button below the Trinket to check your answer![/li]
               [/ul]

               [br /]

               [iframe src:"https://trinket.io/embed/python3/cb15926301" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

               [br /]

               [div class:"revealButtons"]
                 [var name:"clickReveal2" value:false /]

                 [button onClick:`clickReveal2 = !clickReveal2`]
                   [Display value:`clickReveal2 ? 'Hide Explanation' : 'Reveal Answer'` /]
                 [/Button]

                 [br /]

                 [Conditional if: `clickReveal2`]
                   *Answer:*

                   [br /]
                   [br /]

                   [div class:"trinketInst"]
                     Part 1: Graph [Equation]\vec{a}[/Equation]
                   [/div]

                   [br /]

                   [img src:"./static/images/vec_a_scalingVecs.png" title:"Subtraction Plot" /]

                   [br /]
                   [br /]

                   [div class:"trinketInst"]
                     Part 2: Graph [Equation]\vec{a}[/Equation] and [Equation]2\vec{a}[/Equation]
                   [/div]

                   [div class:"equations"]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times 2 = [4. \;\; 4. \;\; 9.] [/Equation]
                   [/div]

                   [br /]

                   [img src:"./static/images/vec_2a_scalingVecs.png" title:"Subtraction Plot" /]

                   [br /]

                   [div class:"trinketInst"]
                     Part 3: Graph [Equation]\vec{a}[/Equation], [Equation]2\vec{a}[/Equation], and [Equation]4\vec{a}[/Equation].
                   [/div]

                   [div class:"equations"]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times 2 = [4. \;\; 4. \;\; 9.] [/Equation]
                     [br /]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times 4 = [8. \;\; 8. \;\; 18.] [/Equation]
                   [/div]

                   [br /]

                   [img src:"./static/images/vec_2a4a_scalingVecs.png" title:"Subtraction Plot" /]

                   [br /]

                   [div class:"trinketInst"]
                     Part 4: Graph [Equation]\vec{a}[/Equation] and [Equation]-2\vec{a}[/Equation].
                   [/div]

                   [div class:"equations"]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times -2 = [-4. \;\; -4. \;\; -9.] [/Equation]
                   [/div]

                   [br /]

                   [img src:"./static/images/vec_neg2a_scalingVecs.png" title:"Subtraction Plot" /]

                   [br /]

                   [div class:"trinketInst"]
                     Part 5: Graph [Equation]\vec{a}[/Equation], [Equation]-2\vec{a}[/Equation], and [Equation]-6\vec{a}[/Equation].
                   [/div]

                   [div class:"equations"]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times -2 = [-4. \;\; -4. \;\; -9.] [/Equation]
                     [br /]
                     [Equation] [2. \;\; 2. \;\; 4.5] \times -6 = [-12. \;\; -12. \;\; -27.] [/Equation]
                   [/div]

                   [br /]

                   [img src:"./static/images/vec_neg2a6a_scalingVecs.png" title:"Subtraction Plot" /]

                   [br /]

                   [br /]
                   [hr /]
                   [br /]

                 [/Conditional]
               [/div]

              [hr /]

              [div class:"centerPara"]
                [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
                [Physics Department](https://clas.ucdenver.edu/physics/)
                [br /]
                Feedback Form *Insert Link*
              [/div]

            [/div]
          [/Case]
          [Case test:"Dot"]
            [div class:"iframe"]

              ### The Dot Product

              [br /]

              [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/0iNrGpwZwog" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]


              #### Question

              [br /]

              [div class:"questions"]

                What is [Equation]\vec{a} \bullet \vec{b}[/Equation]?

                [br /]

                [Equation]\vec{a} = \lt 7, 2, 5 \gt [/Equation]
                [br /]
                [Equation]\vec{b} = \lt 3, 8, 2 \gt [/Equation]
                [br /]

              [/div]

              [br /]

              #### Solve

              Using the Trinket below, set up the problem.

              [ul]
                [li] Import NumPy by adding an import line: `import numpy as np`.
                This will allow you to use np.array to represent the vectors in the code.[/li]
                [li] Assign the np.arrays to the a and b variables. Example: `a = np.array([x,y,z])`.[/li]
                [li] Create another variable that will equal a *dot* b. Example: `ans = a.dot(b)`.
                Try using `a.dot(b)` and `np.dot(a,b)`. What's the result?[/li]
                [li] Print the answer! Add `print(ans)`. Note that the print command is slightly different
                in python 2.[/li]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer! [/li]
              [/ul]


              [iframe src:"https://trinket.io/embed/python/8917f592ec?runOption=console" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]
              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    47
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  To find the dot product of two vectors, multiply each component of each vector (x * x, y * y, z * z) and add them together:

                  [div class:"equations"]
                    [Equation]\vec{A} \bullet \vec{B} = (A_{x} \times B_{x}) + (A_{y} \times B_{y}) + (A_{z} \times B_{z})[/Equation]
                  [/div]

                  [br /]

                  Note that the dot product gives you a **scalar** quantity (just magnitude)! This means that it results in a *single* number
                  representing a quantity. This differs from the *cross product* which yields a **vector** quantity, which has
                  magnitude *and* direction.

                  [br /]
                  [br /]
                  [hr /]

                [/Conditional]

              [/div]

              #### Another Definition

              The dot product can also be calculated using the following equation.

              [br /]

              [div class:"equationStyle"]
                [Equation]
                  \vec{a} \bullet \vec{b} = |a||b|cos\theta
                [/Equation]
              [/div]

            [br /]

            [div class:"questions"]

              What is [Equation]\vec{a} \bullet \vec{b}[/Equation]?

              [br /]

              [Equation]\vec{a} = \lt 37, 16, 54 \gt [/Equation]
              [br /]
              [Equation]\vec{b} = \lt 22, 66, 88 \gt [/Equation]
              [br /]

            [/div]

            [br /]

            #### Solve

            Using the Trinket below, set up the problem.

            [ul]
              [li] Import NumPy by adding an import line: `import numpy as np`.
              This will allow you to use np.array to represent the vectors in the code.[/li]
              [li] Assign the np.arrays to the a and b variables. Example: `a = np.array([x,y,z])`.[/li]
              [li] Create another variable that will equal a *dot* b. Example: `ans = a.dot(b)`.[/li]
              [li] Add the following print command: `"This is the answer with the .dot function:", ans`.[/li]
              [li] Add two variables (`mag_a` and `mag_b`) that equal `np.sqrt(a[0]**2 + a[1]**2 + a[2]**2)`.
               **Note**: Change a to b for the second variable. This takes each
               component and squares it to find the magnitude of the vector. Also
               note that the brackets (`[0], [1], [2]`) call the components from
               the vector arrays individually, where 0 = the x component, 1 =
               the y component, and 2 = the z component.[/li]
              [li] Create a cos variable that equals `ans/(mag_a * mag_b)`. How
              do you get this number? Try rearranging the definition equation above.[/li]
              [li] Create another variable that equals `(mag_a * mag_b)*cos`.[/li]
              [li] Print the following statement: `"This is cos theta:", cos`[/li]
              [li] Print another statement: `"This is the dot product with the
              new definition:", dot`.[/li]
              [li] Click `>_Console` to run the code.[/li]
              [li] Click the **Reveal Answer** button below the Trinket to check your answer!
              Does the `.dot` answer equal the new definition answer?[/li]
            [/ul]

            [br /]

            [iframe src:"https://trinket.io/embed/python/75defa26bd" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

            [br /]

              [div class:"revealButtons"]
                [var name:"clickReveal2" value:false /]

                [button onClick:`clickReveal2 = !clickReveal2`]
                  [Display value:`clickReveal2 ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal2`]
                  *Answer:*

                  [div class:"equations"]
                    6622
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  We can find the magnitude of each vector (see the Magnitude tab
                  for more information) and then what's left? The [Equation]cos\theta[/Equation].
                  Suppose we needed to find [Equation]\theta[/Equation]. We could use
                  [Equation]\vec{a} \bullet \vec{b} = |a||b|cos\theta[/Equation],
                  rearrange it to [Equation]cos\theta = \frac{\vec{a} \bullet \vec{b}}{|\vec{a}||\vec{b}|}[/Equation],
                  and then take the arccos of that answer. A nice check of the
                  .dot() function is the second portion of the code above.

                  [div class:"equationStyle"]
                    [Equation] cos\theta = \frac{\vec{a} \bullet \vec{b}}{|\vec{a}||\vec{b}|} = \frac{(x_{a} \times x_{b})+(y_{a} \times y_{b})+(z_{a} \times z_{b})}{\sqrt{x_{a}^{2}+y_{a}^{2}+z_{a}^{2}} \times \sqrt{x_{b}^{2}+y_{b}^{2}+z_{b}^{2}}} [/Equation]
                  [/div]

                  [br /]


                [/Conditional]
              [/div]
              [hr /]

              [div class:"centerPara"]
                [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
                [Physics Department](https://clas.ucdenver.edu/physics/)
                [br /]
                Feedback Form *Insert Link*
              [/div]

            [/div]
          [/Case]
          [Case test:"Cross"]
            [div class:"iframe"]

              ### The Cross Product

              [br /]

              [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/gPnWm-IXoAY" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]

              #### Question

              [br /]

              [div class:"questions"]

                What is [Equation]\vec{a} \times \vec{b}[/Equation]?

                [br /]

                [Equation]\vec{a} = \lt 15, 12, 0 \gt [/Equation]
                [br /]
                [Equation]\vec{b} = \lt 6, 4, 11 \gt [/Equation]
                [br /]

              [/div]

              [br /]

              #### Solve

              Using the Trinket below, set up the problem.

              [ul]
                [li] Import NumPy by adding an import line: `import numpy as np`.
                This will allow you to use np.array to represent the vectors in the code.[/li]
                [li] Assign the np.arrays to the a and b variables. Example: `a = np.array([x,y,z])`.[/li]
                [li] blahblahblah *Need upgraded Trinket to do this effectively*[/li]
                [li] Print the answer! Add `print(ans)`. Note that the print command is slightly different
                in python 2.[/li]
                [li] Click `>_Console` to run the code.[/li]
                [li] Click the **Reveal Answer** button below the Trinket to check your answer! [/li]
              [/ul]


              [iframe src:"https://trinket.io/embed/python/31b2056efb" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"][/iframe]

              [br /]
              [br /]

              [div class:"revealButtons"]

                [var name:"clickReveal" value:false /]

                [button onClick:`clickReveal = !clickReveal`]
                  [Display value:`clickReveal ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal`]
                  *Answer:*

                  [div class:"equations"]
                    An answer!
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  [br /]

                  To find the cross product of two vectors:

                  [div class:"equations"]
                    Insert cross explanation
                  [/div]

                  [hr /]

                [/Conditional]

              [/div]

              Insert another problem.

            [br /]

            Change the Trinket above and rerun the code. Click *Reveal Answer* to
            check your answer.

            [br /]

              [div class:"revealButtons"]
                [var name:"clickReveal2" value:false /]

                [button onClick:`clickReveal2 = !clickReveal2`]
                  [Display value:`clickReveal2 ? 'Hide Explanation' : 'Reveal Answer'` /]
                [/Button]

                [br /]

                [Conditional if: `clickReveal2`]
                  *Answer:*

                  [div class:"equations"]
                    A new answer!
                  [/div]

                  [br /]

                  *Why is this the answer?*

                  [br /]
                  We shall see.
                  [br /]

                [/Conditional]
              [/div]
              [hr /]

              [div class:"centerPara"]
                [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
                [Physics Department](https://clas.ucdenver.edu/physics/)
                [br /]
                Feedback Form *Insert Link*
              [/div]
            [/div]
          [/Case]
        [/Switch]

      [/div]
    [/Case]
    [Case test:"Magnitude"]
      [div class:"subCenterHead iframe"]

        ## Magnitude

        [hr /]
        [br /]

        [iframe width:"560" height:"315" src:"https://www.youtube.com/embed/MoHMw0ZO7bU" frameborder:"0" allow:"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"][/iframe]

        #### Question

        [br /]

        [div class:"questions"]

          What is [Equation]|\vec{a}|[/Equation]?

          [Equation]\vec{a} = \lt 5\times 10^{7}, 3.2 \times 10^{8}, 6.4 \times 10^{7} \gt m/s^{2} [/Equation].

        [/div]

        [br /]

        #### Solve

        Using the Trinket below, set up the problem.

        [ul]
          [li] Import NumPy by adding an import line: `import numpy as np`.
          This will allow you to use np.array to represent the vector in the code.[/li]
          [li] Assign the np.arrays to the a variable. Example: `a = np.array([x,y,z])`.[/li]
          [li] Create x, y, and z variables and set them equal to the components of
          [Equation]\vec{a}[/Equation].[/li]
          [li] Add a variable `mag_a` and set it equal to `np.sqrt(x**2 + y**2 + z**2)`.[/li]
          [li] Add a variable `mag_a2` and set it equal to `np.sqrt((a[0]**2 + a[1]**2 + a[2]**2))`.[/li]
          [li] Print the answer! Add `print "The magnitude =", mag_a `. [/li]
          [li] Print another answer! Add `print "The second magnitude =", mag_a2`. [/li]
          [li] Click `>_Console` to run the code. Are both answers the same?[/li]
          [li] Click the **Reveal Answer** button below the Trinket to check your answer! [/li]
        [/ul]


        [iframe src:"https://trinket.io/embed/python/6b7499f4e0" width:"100%" height:"600" frameborder:"0" marginwidth:"0" marginheight:"0"] [/iframe]

        [hr /]

        [div class:"centerPara"]
          [img src:"./static/images/ucdenverlogo2.png" title:"UC Denver" /]
          [Physics Department](https://clas.ucdenver.edu/physics/)
          [br /]
          Feedback Form *Insert Link*
        [/div]

      [/div]
    [/Case]
  [/Switch]
[/div]
