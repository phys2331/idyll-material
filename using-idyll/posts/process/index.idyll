[meta title:"The Process" description:"How I decide what to do." /]

[Header
  fullWidth:true
  title:"The Process"
  subtitle:"Deciding How to Build Your Document"
  author:"Your Name Here"
  authorLink:"https://idyll-lang.org"
  date:`(new Date()).toDateString()`
  background:"#222222"
  color:"#ffffff"
   /]

### Accessibility

As you go, keep accessibility in mind. 
This means providing descriptive but concise alternate text for any images,
as well as creating keyboard-navigable and screen-readable interactives, or good alternatives for said interactives. 
[ARIA](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA) is a good resource for HTML tags that are not built to be accessible by themselves.

### Note

Aside from this, there is no one "correct" way of building an Idyll document; the purpose of this document is to outline my own process to help give you ideas.

## Choosing a Template

When you run `idyll create`, after choosing a name for your project you will be asked what template you want to use.
If you don't know which one is best for your project, don't worry!
You can always change the layout to match one of the other templates later.

```
? In which directory would you like your project? test
? What would you like to name your project? test
? Which template would you like to use? (Use arrow keys)

❯ Article
  Multipage
  Scrollytelling
  Slideshow
  Custom
```
The [a]**Article**[/a] template is the most basic - this will create a single-page, single-column article much like this one. 
If you're not sure what template to use, this is an excellent choice.

```
  Article
❯ Multipage
  Scrollytelling
  Slideshow
  Custom
```

The **Multipage** template is similar to Article in layout, but is designed for multiple pages to exist within the same project.
This project uses Multipage.
Multipage is best for complex projects that you know will be hard to follow on a single page or will benefit from having multiple, separate entries.

```
  Article
  Multipage
❯ Scrollytelling
  Slideshow
  Custom
```

The **Storytelling** template seems, at first, to be laid out like Article, but as you scroll down you will notice a key difference - the page is divided into cards.
If you are familiar with Jupyter, the cards can be used to compartmentalize ideas in very similar ways.
Personally, this is my favorite for most applications because it gives a very concrete separation between ideas.

```
  Article
  Multipage
  Scrollytelling
❯ Slideshow
  Custom
```

The **Slideshow** template is just that - a slideshow. 
Anything that would work well in a presentation format could be put together in Slideshow.

```
  Article
  Multipage
  Scrollytelling
  Slideshow
❯ Custom
```
The **Custom** option will let you choose a path for a template that you, the user have created.
After selecting this, you will be prompted for the location of the template you wish to use.
Select a directory, not an idyll.index; this will copy more or less everything in the template, generating a clone of it for you to build off of.

If you have a lot of projects that should have similar layout,
or a single project which will have many separate pages that should have similar layouts,
creating your own template for use is a good option.

## The Actual Writing

Now that we've chosen a template, we're on to the actual writing of the project.
I generally start by approaching this as if I'm writing a regular text, markdown, or similar document.

1. **Body Text** - This is the bulk of your explanation. Keep other steps in mind as you go, of course, but the first run through typically focuses on getting your thoughts on the topic down.
1. **Images, Equations, Code Blocks** - Equations and diagrams are often crucial to understanding physics concepts. Sometimes I will even start by collecting images before I've written anything.
3. **Interactables** - Re-read everything you've done so far. Where would understanding be improved if you could play with the variables in an equation and see how the result changes? Where would it be fun if you could click on the diagram and see something move? These are good candidates for interactive components.
4. **Organization, Formatting** - Now that you've got all of your content, look for ways to make it flow better. Where is your writing difficult to understand, and why? What would make the ideas flow better?
5. **Final Tweaks** - Re-read everything to check for typos, spelling and grammar, etc.
6. **Testing** - Have someone else read your page and try to follow the concept it is teaching or process it is walking them through. Adjust based on feedback.

## Using Components

What makes Idyll really stand out is the dynamic way in which data is presented.
When choosing and using a component, 
think about what information should be presented to the user and what subset of that information should be interactable.
* **Does the way the information is drawn add to the reader's understanding?** Is a full drawing of the tree you mentioned in your last paragraph distracting, or does it help the user map the diagram to the situation you just described?
* **Realistically, could this variable be changed?** Changing the mass of a falling particle can help your explanation, but changing the mass of an electron in an electric field will probably overwhelm your reader with superfluous information. On the other hand, maybe a common red herring is what you need to get your point across.
* **Is this easy to look at?** Choose fonts, color schemes, and line widths that are easy on the eye. Reading your material shouldn't be an unpleasant experience.

When trying to choose a particular component, it may be helpful to look for examples. 
There is an official Idyll [gallery](https://idyll-lang.org/gallery) - browsing this might give you ideas. 
[Parametric Press](https://parametric.press/issue-01/) also presents a variety of articles written in the Idyll language.

### Specific Components

Below are some components that I've used and my experiences with them. 
The purpose of this is to document how to decide whether you want to use the component,
not to document how to use the components once you have included them.

#### Apparatus (Visualization)

[Apparatus](aprt.us) is amazing for making small, simple, visual interactives. 
You can link geometries to variables and make these variables functions of one another. 

Where Apparatus really shines is in allowing you to control variables by interacting with geometry on the page - 
for example, moving one object might control the time variable which could in turn control other objects. 

If you need to use numeric methods like tracking past values, you will likely need to write your own code, 
but if you want a visual representation of something that could be solved analytically, Apparatus is an excellent choice.

#### Easer Toggle (Time Advancement)

While I could not find its installation name in the package manager, 
Parametric Press used a package named [Easer Toggle](https://github.com/ParametricPress/01-on-particle-physics/tree/master/components) in [one of their articles](https://parametric.press/issue-01/on-particle-physics/).
You can use this by downloading the linked file directly to the `components` directory of an idyll post.

Easer Toggle is a simple component which incrememnts a variable forward in time when a button is pressed.
Said button becomes the stop button when the variable is still increasing.
(Using the version that I found, you need to create a reset button on your own.)

Easer Toggle can be used together with other components, so if you need to change a variable in real time, 
use Easer Toggle.
